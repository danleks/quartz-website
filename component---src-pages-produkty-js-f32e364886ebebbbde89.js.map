{"version":3,"sources":["webpack:///./src/templates/ProductsIntroTemplate/ProductsIntroTemplate.js","webpack:///./src/templates/ProductsListTemplate/ProductsListTemplate.js","webpack:///./src/pages/produkty.js"],"names":["StyledWrapper","styled","div","StyledMainImgWrapper","BackgroundImage","StyledParagraph","p","theme","color","white","fontSize","mobile","xl","fontWeight","bold","mq","small","l","tablet","xxl","desktop","StyledInnerText","span","StyledOverlay","dark","ProductsIntrotemplate","ImagePath","file","childImageSharp","fluid","StyledListWrapper","ul","preDesktop","StyledListItem","li","midGrey","StyledImg","StyledTitle","h3","black","ProductsListTemplate","imageList","allFile","edges","map","image","key","node","id","originalName","split","ProductsPage","location","MainTemplate","pathname"],"mappings":"gLAKMA,EAAgBC,IAAOC,IAAV,2FAAGD,CAAH,iBAIbE,EAAuBF,YAAOG,KAAV,kGAAGH,CAAH,qMAapBI,EAAkBJ,IAAOK,EAAV,6FAAGL,CAAH,oKAER,qBAAGM,MAAkBC,MAAMC,SACvB,qBAAGF,MAAkBG,SAASC,OAAOC,MACnC,qBAAGL,MAAkBM,WAAWC,QAK7C,qBAAGP,MAAkBQ,GAAGC,SACT,qBAAGT,MAAkBG,SAASC,OAAOM,KAGpD,qBAAGV,MAAkBQ,GAAGG,UACT,qBAAGX,MAAkBG,SAASQ,OAAOC,OAGpD,qBAAGZ,MAAkBQ,GAAGK,WACT,qBAAGb,MAAkBG,SAASU,QAAQR,MAIrDS,EAAkBpB,IAAOqB,KAAV,6FAAGrB,CAAH,gBACR,qBAAGM,MAAkBC,MAAMC,SAGlCc,EAAgBtB,IAAOC,IAAV,2FAAGD,CAAH,sGAQK,qBAAGM,MAAkBC,MAAMgB,QAgCpCC,EA7Be,WAE1B,IAaIC,EAbM,OAaWC,KAAKC,gBAAgBC,MAE1C,OACI,kBAAC7B,EAAD,KACI,kBAACG,EAAD,CAAsB0B,MAAOH,GACzB,kBAACrB,EAAD,0DACsD,kBAACgB,EAAD,+BADtD,KAGA,kBAACE,EAAD,S,iBC7EVvB,EAAgBC,IAAOC,IAAV,0FAAGD,CAAH,wBAIb6B,EAAoB7B,IAAO8B,GAAV,8FAAG9B,CAAH,oFAKjB,qBAAGM,MAAkBQ,GAAGiB,cAMxBC,EAAiBhC,IAAOiC,GAAV,2FAAGjC,CAAH,2GACW,qBAAGM,MAAkBC,MAAM2B,WAGpD,qBAAG5B,MAAkBQ,GAAGiB,cAMxBI,EAAYnC,YAAOG,KAAV,sFAAGH,CAAH,kKAaToC,EAAcpC,IAAOqC,GAAV,wFAAGrC,CAAH,6DAEJ,qBAAGM,MAAkBC,MAAM+B,SAgDzBC,EA3Cc,WAEzB,IAuBMC,EAvBI,OAuBaC,QAAQC,MAE/B,OACI,kBAAC,EAAD,KACI,kBAACb,EAAD,KAEQW,EAAUG,KAAI,SAAAC,GAAK,OACf,kBAACZ,EAAD,CAAgBa,IAAKD,EAAME,KAAKC,IAC5B,kBAACZ,EAAD,CAAWP,MAAOgB,EAAME,KAAKnB,gBAAgBC,QAC7C,kBAACQ,EAAD,KAAcQ,EAAME,KAAKnB,gBAAgBC,MAAMoB,aAAaC,MAAM,KAAK,WChEpFC,UAbM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,OACI,kBAACC,EAAA,EAAD,CAAcC,SAAUF,EAASE,UAC7B,kBAAC,EAAD,MACA,kBAAC,EAAD,S","file":"component---src-pages-produkty-js-f32e364886ebebbbde89.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport BackgroundImage from 'gatsby-background-image';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst StyledWrapper = styled.div`\n    width: 100%;\n`;\n\nconst StyledMainImgWrapper = styled(BackgroundImage)`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 80vh;\n    max-height: 80vh;\n    width: 100%;\n    padding: 0 6.5rem;\n    background-repeat:  no-repeat;\n    background-size: cover;\n    background-position: 20% 0;\n`;\n\nconst StyledParagraph = styled.p`\n    max-width: 60rem;\n    color: ${({ theme }) => theme.color.white};\n    font-size: ${({ theme }) => theme.fontSize.mobile.xl};\n    font-weight: ${({ theme }) => theme.fontWeight.bold};\n    line-height: 1.5;\n    text-align: center;\n    z-index: 10;\n\n    ${({ theme }) => theme.mq.small} {\n        font-size: ${({ theme }) => theme.fontSize.mobile.l};\n    }\n\n    ${({ theme }) => theme.mq.tablet} {\n        font-size: ${({ theme }) => theme.fontSize.tablet.xxl};\n    }\n\n    ${({ theme }) => theme.mq.desktop} {\n        font-size: ${({ theme }) => theme.fontSize.desktop.xl};\n    }\n`;\n\nconst StyledInnerText = styled.span`\n    color: ${({ theme }) => theme.color.white};\n`;\n\nconst StyledOverlay = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    max-height: 80vh;\n    opacity: .7;\n    background-color: ${({ theme }) => theme.color.dark};\n`;\n\nconst ProductsIntrotemplate = () => {\n\n    const data = useStaticQuery(graphql`\n    query ProductsIntroQuery {\n      file(relativePath: {eq: \"productsBg.jpg\"}) {\n        id\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid_withWebp\n          }\n        }\n      }\n    }\n  `)\n\n  const ImagePath = data.file.childImageSharp.fluid;\n\n    return(\n        <StyledWrapper>\n            <StyledMainImgWrapper fluid={ImagePath}>\n                <StyledParagraph>\n                    Powierzchni z naturalnego kwarcu, które zaspokoją <StyledInnerText>różne gusta i potrzeby</StyledInnerText>.\n                </StyledParagraph>\n                <StyledOverlay />\n            </StyledMainImgWrapper>       \n        </StyledWrapper>\n    )\n}\n\nexport default ProductsIntrotemplate;","import React from 'react';\nimport styled from 'styled-components';\nimport BackgroundImage from 'gatsby-background-image';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst StyledWrapper = styled.div`\n    padding: 5rem 2rem;\n`;\n\nconst StyledListWrapper = styled.ul`\n    max-width: 130rem;\n    margin: auto;\n    list-style: none;\n\n    ${({ theme }) => theme.mq.preDesktop} {\n        display: flex;\n        flex-wrap: wrap;\n    }\n`;\n\nconst StyledListItem = styled.li`\n    border-bottom: 1px solid ${({ theme }) => theme.color.midGrey};\n    margin-bottom: 5rem;\n\n    ${({ theme }) => theme.mq.preDesktop} {\n        min-width: calc(50% - 3.5rem);\n        margin-right: 3.5rem;\n    }\n`;\n\nconst StyledImg = styled(BackgroundImage)`\n    width: 100%;\n    height: 30rem;\n    background-size: cover;\n    background-repeat: no-repeat;\n    cursor: pointer;\n    transition: transform .3s ease-in-out;\n\n    :hover {\n        transform: scale(1.05);\n    }\n`;\n\nconst StyledTitle = styled.h3`\n    margin: 3rem 0 2rem;\n    color: ${({ theme }) => theme.color.black};\n    text-transform: capitalize;\n`;\n\n\nconst ProductsListTemplate = () => {\n\n    const data = useStaticQuery(graphql`\n        query ProductsListQuery {\n            allFile(filter: {relativeDirectory: {eq: \"surfaces\"}}) {\n            edges {\n                node {\n                id\n                childImageSharp {\n                    fluid {\n                        sizes\n                        src\n                        srcSet\n                        srcSetWebp\n                        srcWebp\n                        originalName\n                        aspectRatio\n                    }\n                }\n                }\n            }\n            }\n        }\n    `);\n\n    const imageList = data.allFile.edges;\n\n    return (\n        <StyledWrapper>\n            <StyledListWrapper>\n                {\n                    imageList.map(image => \n                        <StyledListItem key={image.node.id}>\n                            <StyledImg fluid={image.node.childImageSharp.fluid} />\n                            <StyledTitle>{image.node.childImageSharp.fluid.originalName.split('.')[0]}</StyledTitle>\n                        </StyledListItem>\n                    )\n                }\n            </StyledListWrapper>\n        </StyledWrapper>      \n    )\n};\n\nexport default ProductsListTemplate;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MainTemplate from 'templates/MainTemplate/MainTemplate';\nimport ProductsIntrotemplate from 'templates/ProductsIntroTemplate/ProductsIntroTemplate';\nimport ProductsListTemplate from 'templates/ProductsListTemplate/ProductsListTemplate';\n\n\nconst ProductsPage = ({ location }) => {\n    return (\n        <MainTemplate pathname={location.pathname}>\n            <ProductsIntrotemplate />\n            <ProductsListTemplate />\n        </MainTemplate>\n    )\n};\n\nProductsPage.propTypes = {\n    location: PropTypes.objectOf(PropTypes.object).isRequired,\n}\n\nexport default ProductsPage;"],"sourceRoot":""}